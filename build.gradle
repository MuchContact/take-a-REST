buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.3'
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'idea'

repositories {
  mavenCentral()
}

configurations {
  integrationTestCompile {
    extendsFrom testCompile
  }
  integrationTestRuntime {
    extendsFrom integrationTestCompile, testRuntime
  }
}

def sets = [ "java", "groovy" ]
def sourceFolder = { set ->
  "src/integration-test/$set"
}

sourceSets {
  integrationTest { sourceSet ->
    sets.each {
      if (sourceSet.hasProperty(it)) {
        sourceSet."$it".srcDir file(sourceFolder(it))
      }
    }
  }
}

dependencies {
  compile('org.jboss.resteasy:resteasy-jaxrs:3.0.8.Final')
  compile('org.jboss.resteasy:resteasy-cdi:3.0.8.Final')
  compile('org.jboss.weld.servlet:weld-servlet:2.2.1.Final')
  compile('log4j:log4j:1.2.14')
  compile('com.theoryinpractise:halbuilder-standard:3.0.1')
  compile('org.projectlombok:lombok:1.14.2')
  compile('com.google.guava:guava:17.0')
  compile('com.googlecode.siren4j:siren4j:1.0.14')

  def tomcatVersion = '7.0.54'
  tomcat("org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}")
  tomcat("org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}")
  tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
    exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
  }

  integrationTestCompile sourceSets.main.output
  integrationTestCompile sourceSets.test.output
  integrationTestCompile configurations.testCompile
  integrationTestRuntime configurations.testRuntime

  integrationTestCompile 'org.codehaus.groovy:groovy-all:2.3.3'
  integrationTestCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
      exclude group: 'org.codehaus.groovy'
  }
  integrationTestCompile('org.jboss.resteasy:resteasy-client:3.0.8.Final')
}

ext {
  tomcatStopPort = 8081
  tomcatStopKey = 'stopKey'
}

task integrationTomcatRun(type: org.gradle.api.plugins.tomcat.tasks.TomcatRun) {
  stopPort = tomcatStopPort
  stopKey = tomcatStopKey
  daemon = true
}

task integrationTomcatStop(type: org.gradle.api.plugins.tomcat.tasks.TomcatStop) {
  stopPort = tomcatStopPort
  stopKey = tomcatStopKey
}

task integrationTest(type: Test) {
  description = "Runs integration tests"
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
  dependsOn integrationTomcatRun
  finalizedBy integrationTomcatStop
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.12'
}

group = 'org.realrest'
version = '1.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

idea {
  module {
    scopes.TEST.plus += configurations.integrationTestCompile
  }
}
